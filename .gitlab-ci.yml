stages:
  - sast
  - sca
  - secrets
  - build
  - container

sast_scan:
  image: docker:stable
  stage: sast
  allow_failure: true
  variables:
    DOCKER_DRIVER: overlay2
  services:
    - docker:stable-dind
  script:
    - apk add py-pip
    - pip install bandit
    - bandit -r -f json -o bandit_result.json --exit-zero app/
  artifacts:
    paths: [bandit_result.json]
    expire_in: 1 week

semgrep:
  image: returntocorp/semgrep-agent:v1
  stage: sast
  allow_failure: true
  script:
    - apk add py-pip
    - pip install semgrep
    - semgrep scan . --config auto --json >> semgrep_result.json
  artifacts:
    paths: [semgrep_result.json]
    expire_in: 1 week

gitleaks:
  image: docker:stable
  stage: secrets
  allow_failure: true
  variables:
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  script:
    - docker run --rm --name=gitleaks -v $PWD/:/code zricethezav/gitleaks  detect  --source /code --report-path /code/gitleaks.json || true
  artifacts:
    paths: [gitleaks.json]
    expire_in: 1 week

build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - echo "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"

dockerfile_scan:
  image: docker:stable
  stage: container
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker run hadolint/hadolint < Dockerfile >> hadolint-results.txt
  artifacts:
    paths: [hadolint-results.txt]
    expire_in: 1 week

trivy_scan:
  image:
    name: docker:stable
  stage: container
  services:
    - docker:dind
  variables:
    TRIVY_AUTH_URL: $CI_REGISTRY
    TRIVY_USERNAME: $CI_REGISTRY_USER
    TRIVY_PASSWORD: $CI_REGISTRY_PASSWORD
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - apk add -U wget ca-certificates tar curl git
    - export VERSION=$(curl --silent "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - wget https://github.com/aquasecurity/trivy/releases/download/v${VERSION}/trivy_${VERSION}_Linux-64bit.tar.gz
    - tar zxvf trivy_${VERSION}_Linux-64bit.tar.gz
  script:
    - ./trivy image --exit-code 0 -o trivy_result.json -f json ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
  artifacts:
    paths:
      - trivy_result.json
    expire_in: 1 week
